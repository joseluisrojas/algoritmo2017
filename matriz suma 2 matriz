// algoritmo.cpp : Defines the entry point for the console application.
// ( suma 2 matrices (n x m). )
// ( jose luis rojas quintanilla 27/10/2017. )
                                                                                
#include "stdafx.h" // librerias.
#include <iostream>
#include "conio.h"

#define fil 100 // define tama√±o del vector.
#define col 100

using namespace std;

void CargarMatrizCuadradaA (int MatA[fil][col], int n, int m); // prototipos.
void CargarMatrizCuadradaB (int MatB[fil][col], int n, int m); // prototipos.
void MostrarMatrizCuadradaA (int MatA[fil][col], int n, int m);
void MostrarMatrizCuadradaB (int MatB[fil][col], int n, int m);
void SumaDosMatriccesAB (int MatA[fil][col], int MatB[fil][col], int MatAB[fil][col], int n, int m);
void MostrarMatrizCuadradaAB (int MatAB[fil][col], int n, int m);

void main ()
{
  int MatA[fil][col]={'\0'}, n, m, MatB[fil][col]={'\0'}, MatAB[fil][col]={'\0'}; // declarar variables.
    
   do // limite de elementos fila para calcular.
   { 
     cout<< "cantidad fila a calcular: ";
     cin>> n;
     cout<< endl;

   } while ((n < 0) || (n >= fil));

  do // limite de elementos columna para calcular.
   { 
     cout<< "cantidad columna a calcular: ";
     cin>> m;
     cout<< endl;

   } while ((m < 0) || (m >= col));

  CargarMatrizCuadradaA (MatA, n, m); // llamar funcion cargar.
  CargarMatrizCuadradaB (MatB, n, m); 
  MostrarMatrizCuadradaA (MatA, n, m);
  MostrarMatrizCuadradaB (MatB, n, m);
  SumaDosMatriccesAB (MatA, MatB, MatAB, n, m);
  MostrarMatrizCuadradaAB (MatAB, n, m); 
 
  getch();

}

void CargarMatrizCuadradaA (int MatA[fil][col], int n, int m) // funcion cargar.
{
   cout<< "ingrese los elementos de la matriz A: ";
   cout<< endl<< endl;

   for (int i=0; i<n; i++)
   { for (int j=0; j<m; j++)
     {
        cout<< "Mat A["<<i<<"]["<<j<<"]= ";
        cin>> MatA[i][j];
        cout<< endl;
     }
   }
}

void CargarMatrizCuadradaB (int MatB[fil][col], int n, int m) // funcion cargar.
{
   cout<< "ingrese los elementos de la matriz B: ";
   cout<< endl<< endl;

   for (int i=0; i<n; i++)
   { for (int j=0; j<m; j++)
     {
        cout<< "Mat B["<<i<<"]["<<j<<"]= ";
        cin>> MatB[i][j];
        cout<< endl;
     }
   }
}

void MostrarMatrizCuadradaA (int MatA[fil][col], int n, int m) // funcion mostrar.
{
   cout<< "\n\n\tla matriz A (n x m) es: ";
   cout<< endl<< endl;

   for (int i=0; i<n; i++)
   { for (int j=0; j<m; j++)
     {
        cout<< "\t Mat A["<<i<<"]["<<j<<"]= ";
        cout<< MatA[i][j];
     }

     cout<< endl<< endl;

   }
}

void MostrarMatrizCuadradaB (int MatB[fil][col], int n, int m) // funcion mostrar.
{
   cout<< "\n\n\tla matriz B (n x m) es: ";
   cout<< endl<< endl;

   for (int i=0; i<n; i++)
   { for (int j=0; j<m; j++)
     {
        cout<< "\t Mat B["<<i<<"]["<<j<<"]= ";
        cout<< MatB[i][j];
     }

     cout<< endl<< endl;

   }
}

void SumaDosMatriccesAB (int MatA[fil][col], int MatB[fil][col], int MatAB[fil][col], int n, int m)
{
   for (int i=0; i<n; i++)
   { for (int j=0; j<m; j++)
     {
        MatAB[i][j] = MatA[i][j] + MatB[i][j];
     }
   }
}

void MostrarMatrizCuadradaAB (int MatAB[fil][col], int n, int m) // funcion mostrar.
{
   cout<< "\n\n\tla suma matriz A + B (n x m) es: ";
   cout<< endl<< endl;

   for (int i=0; i<n; i++)
   { for (int j=0; j<m; j++)
     {
        cout<< "\t Mat A+B["<<i<<"]["<<j<<"]= ";
        cout<< MatAB[i][j];
     }

     cout<< endl<< endl;

   }
}

